# Outside requirements: freeype, xmlto

#moduleset = 'http://cgit.freedesktop.org/xorg/util/modular/blob/xorg.modules'
moduleset = os.path.join(os.environ['HOME'], 'src', 'freedesktop', 'jhbuild', 'xorg.modules')

modules = [ 'xquartz' ]

skip = [ 'xorg-drivers', 'xdriinfo', 'libdrm', 'libpciaccess', 'libGL', 'fontconfig', 'xkeyboard-config' ]

# All modules will be in $HOME/src/freedesktop/jhbuild after the checkout
os.environ['JHBUILDDIR'] = os.path.join(os.environ['HOME'], 'src', 'freedesktop', 'jhbuild')

checkoutroot = os.path.join(os.environ['JHBUILDDIR'] , 'src');
prefix = os.path.join(os.environ['JHBUILDDIR'], 'build');

os.environ['ACLOCAL'] = 'aclocal -I  /usr/local/share/aclocal -I ' + os.path.join(prefix, 'share', 'aclocal')
os.environ['PKG_CONFIG_PATH'] = os.path.join(prefix, 'share', 'pkgconfig') + ':' + os.path.join(prefix, 'lib', 'pkgconfig') + ':/usr/share/pkgconfig:/usr/lib/pkgconfig'
os.environ['LIBTOOLIZE'] = 'glibtoolize'

os.environ['GROFF'] = '/opt/local/bin/groff'
os.environ['XMLTO'] = '/opt/local/bin/xmlto'
os.environ['ASCIIDOC'] = '/opt/local/bin/asciidoc'
os.environ['DOXYGEN'] = '/opt/local/bin/doxygen'
os.environ['FOP'] = '/opt/local/bin/fop'
os.environ['FOP_OPTS'] = '-Xmx2048m -Djava.awt.headless=true'
os.environ['PS2PDF'] = '/opt/local/bin/ps2pdf'

os.environ['FREETYPE_CFLAGS'] = '-I/opt/X11/include/freetype2 -I' + os.path.join(prefix, 'include') + ' -I/opt/X11/include'

os.environ['CC'] = '/opt/llvm/bin/clang'
os.environ['CXX'] = '/opt/llvm/bin/clang++'
os.environ['CFLAGS'] = '-O0 -ggdb3 -Wall -arch i386 -arch x86_64'
os.environ['CPPFLAGS'] = '-I/opt/X11/include/freetype2 -I' + os.path.join(prefix, 'include') + ' -I/opt/X11/include'

autogenargs='--without-fop --without-xmlto --without-doxygen --without-asciidoc --without-groff --disable-specs --disable-devel-docs --disable-docs --cache-file=' + os.path.join(os.environ['JHBUILDDIR'] , 'configure-cache') + ' --without-dtrace --disable-static --disable-dependency-tracking --with-launchagents-dir=' + os.path.join(prefix, 'Library', 'LaunchAgents') + ' --with-launchdaemons-dir=' + os.path.join(prefix, 'Library', 'LaunchDaemons') + ' --with-apple-applications-dir=' + os.path.join(prefix, 'Applications')


